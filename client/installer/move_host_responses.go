// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// MoveHostReader is a Reader for the MoveHost structure.
type MoveHostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MoveHostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewMoveHostAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewMoveHostUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMoveHostForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMoveHostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewMoveHostConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewMoveHostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewMoveHostAccepted creates a MoveHostAccepted with default headers values
func NewMoveHostAccepted() *MoveHostAccepted {
	return &MoveHostAccepted{}
}

/*MoveHostAccepted handles this case with default header values.

Success.
*/
type MoveHostAccepted struct {
	Payload *models.Host
}

func (o *MoveHostAccepted) Error() string {
	return fmt.Sprintf("[POST /clusters/{cluster_id}/hosts/{host_id}/actions/move][%d] moveHostAccepted  %+v", 202, o.Payload)
}

func (o *MoveHostAccepted) GetPayload() *models.Host {
	return o.Payload
}

func (o *MoveHostAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Host)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveHostUnauthorized creates a MoveHostUnauthorized with default headers values
func NewMoveHostUnauthorized() *MoveHostUnauthorized {
	return &MoveHostUnauthorized{}
}

/*MoveHostUnauthorized handles this case with default header values.

Unauthorized.
*/
type MoveHostUnauthorized struct {
	Payload *models.InfraError
}

func (o *MoveHostUnauthorized) Error() string {
	return fmt.Sprintf("[POST /clusters/{cluster_id}/hosts/{host_id}/actions/move][%d] moveHostUnauthorized  %+v", 401, o.Payload)
}

func (o *MoveHostUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *MoveHostUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveHostForbidden creates a MoveHostForbidden with default headers values
func NewMoveHostForbidden() *MoveHostForbidden {
	return &MoveHostForbidden{}
}

/*MoveHostForbidden handles this case with default header values.

Forbidden.
*/
type MoveHostForbidden struct {
	Payload *models.InfraError
}

func (o *MoveHostForbidden) Error() string {
	return fmt.Sprintf("[POST /clusters/{cluster_id}/hosts/{host_id}/actions/move][%d] moveHostForbidden  %+v", 403, o.Payload)
}

func (o *MoveHostForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *MoveHostForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveHostNotFound creates a MoveHostNotFound with default headers values
func NewMoveHostNotFound() *MoveHostNotFound {
	return &MoveHostNotFound{}
}

/*MoveHostNotFound handles this case with default header values.

Error.
*/
type MoveHostNotFound struct {
	Payload *models.Error
}

func (o *MoveHostNotFound) Error() string {
	return fmt.Sprintf("[POST /clusters/{cluster_id}/hosts/{host_id}/actions/move][%d] moveHostNotFound  %+v", 404, o.Payload)
}

func (o *MoveHostNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *MoveHostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveHostConflict creates a MoveHostConflict with default headers values
func NewMoveHostConflict() *MoveHostConflict {
	return &MoveHostConflict{}
}

/*MoveHostConflict handles this case with default header values.

Error.
*/
type MoveHostConflict struct {
	Payload *models.Error
}

func (o *MoveHostConflict) Error() string {
	return fmt.Sprintf("[POST /clusters/{cluster_id}/hosts/{host_id}/actions/move][%d] moveHostConflict  %+v", 409, o.Payload)
}

func (o *MoveHostConflict) GetPayload() *models.Error {
	return o.Payload
}

func (o *MoveHostConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMoveHostInternalServerError creates a MoveHostInternalServerError with default headers values
func NewMoveHostInternalServerError() *MoveHostInternalServerError {
	return &MoveHostInternalServerError{}
}

/*MoveHostInternalServerError handles this case with default header values.

Error.
*/
type MoveHostInternalServerError struct {
	Payload *models.Error
}

func (o *MoveHostInternalServerError) Error() string {
	return fmt.Sprintf("[POST /clusters/{cluster_id}/hosts/{host_id}/actions/move][%d] moveHostInternalServerError  %+v", 500, o.Payload)
}

func (o *MoveHostInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *MoveHostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
