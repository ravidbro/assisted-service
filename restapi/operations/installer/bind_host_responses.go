// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// BindHostAcceptedCode is the HTTP code returned for type BindHostAccepted
const BindHostAcceptedCode int = 202

/*BindHostAccepted Success.

swagger:response bindHostAccepted
*/
type BindHostAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.Host `json:"body,omitempty"`
}

// NewBindHostAccepted creates BindHostAccepted with default headers values
func NewBindHostAccepted() *BindHostAccepted {

	return &BindHostAccepted{}
}

// WithPayload adds the payload to the bind host accepted response
func (o *BindHostAccepted) WithPayload(payload *models.Host) *BindHostAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind host accepted response
func (o *BindHostAccepted) SetPayload(payload *models.Host) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindHostAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BindHostUnauthorizedCode is the HTTP code returned for type BindHostUnauthorized
const BindHostUnauthorizedCode int = 401

/*BindHostUnauthorized Unauthorized.

swagger:response bindHostUnauthorized
*/
type BindHostUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewBindHostUnauthorized creates BindHostUnauthorized with default headers values
func NewBindHostUnauthorized() *BindHostUnauthorized {

	return &BindHostUnauthorized{}
}

// WithPayload adds the payload to the bind host unauthorized response
func (o *BindHostUnauthorized) WithPayload(payload *models.InfraError) *BindHostUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind host unauthorized response
func (o *BindHostUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindHostUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BindHostForbiddenCode is the HTTP code returned for type BindHostForbidden
const BindHostForbiddenCode int = 403

/*BindHostForbidden Forbidden.

swagger:response bindHostForbidden
*/
type BindHostForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewBindHostForbidden creates BindHostForbidden with default headers values
func NewBindHostForbidden() *BindHostForbidden {

	return &BindHostForbidden{}
}

// WithPayload adds the payload to the bind host forbidden response
func (o *BindHostForbidden) WithPayload(payload *models.InfraError) *BindHostForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind host forbidden response
func (o *BindHostForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindHostForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BindHostNotFoundCode is the HTTP code returned for type BindHostNotFound
const BindHostNotFoundCode int = 404

/*BindHostNotFound Error.

swagger:response bindHostNotFound
*/
type BindHostNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBindHostNotFound creates BindHostNotFound with default headers values
func NewBindHostNotFound() *BindHostNotFound {

	return &BindHostNotFound{}
}

// WithPayload adds the payload to the bind host not found response
func (o *BindHostNotFound) WithPayload(payload *models.Error) *BindHostNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind host not found response
func (o *BindHostNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindHostNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BindHostConflictCode is the HTTP code returned for type BindHostConflict
const BindHostConflictCode int = 409

/*BindHostConflict Error.

swagger:response bindHostConflict
*/
type BindHostConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBindHostConflict creates BindHostConflict with default headers values
func NewBindHostConflict() *BindHostConflict {

	return &BindHostConflict{}
}

// WithPayload adds the payload to the bind host conflict response
func (o *BindHostConflict) WithPayload(payload *models.Error) *BindHostConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind host conflict response
func (o *BindHostConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindHostConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BindHostInternalServerErrorCode is the HTTP code returned for type BindHostInternalServerError
const BindHostInternalServerErrorCode int = 500

/*BindHostInternalServerError Error.

swagger:response bindHostInternalServerError
*/
type BindHostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewBindHostInternalServerError creates BindHostInternalServerError with default headers values
func NewBindHostInternalServerError() *BindHostInternalServerError {

	return &BindHostInternalServerError{}
}

// WithPayload adds the payload to the bind host internal server error response
func (o *BindHostInternalServerError) WithPayload(payload *models.Error) *BindHostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the bind host internal server error response
func (o *BindHostInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BindHostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
