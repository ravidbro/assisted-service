// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// MoveHostAcceptedCode is the HTTP code returned for type MoveHostAccepted
const MoveHostAcceptedCode int = 202

/*MoveHostAccepted Success.

swagger:response moveHostAccepted
*/
type MoveHostAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.Host `json:"body,omitempty"`
}

// NewMoveHostAccepted creates MoveHostAccepted with default headers values
func NewMoveHostAccepted() *MoveHostAccepted {

	return &MoveHostAccepted{}
}

// WithPayload adds the payload to the move host accepted response
func (o *MoveHostAccepted) WithPayload(payload *models.Host) *MoveHostAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move host accepted response
func (o *MoveHostAccepted) SetPayload(payload *models.Host) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveHostAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveHostUnauthorizedCode is the HTTP code returned for type MoveHostUnauthorized
const MoveHostUnauthorizedCode int = 401

/*MoveHostUnauthorized Unauthorized.

swagger:response moveHostUnauthorized
*/
type MoveHostUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewMoveHostUnauthorized creates MoveHostUnauthorized with default headers values
func NewMoveHostUnauthorized() *MoveHostUnauthorized {

	return &MoveHostUnauthorized{}
}

// WithPayload adds the payload to the move host unauthorized response
func (o *MoveHostUnauthorized) WithPayload(payload *models.InfraError) *MoveHostUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move host unauthorized response
func (o *MoveHostUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveHostUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveHostForbiddenCode is the HTTP code returned for type MoveHostForbidden
const MoveHostForbiddenCode int = 403

/*MoveHostForbidden Forbidden.

swagger:response moveHostForbidden
*/
type MoveHostForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewMoveHostForbidden creates MoveHostForbidden with default headers values
func NewMoveHostForbidden() *MoveHostForbidden {

	return &MoveHostForbidden{}
}

// WithPayload adds the payload to the move host forbidden response
func (o *MoveHostForbidden) WithPayload(payload *models.InfraError) *MoveHostForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move host forbidden response
func (o *MoveHostForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveHostForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveHostNotFoundCode is the HTTP code returned for type MoveHostNotFound
const MoveHostNotFoundCode int = 404

/*MoveHostNotFound Error.

swagger:response moveHostNotFound
*/
type MoveHostNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMoveHostNotFound creates MoveHostNotFound with default headers values
func NewMoveHostNotFound() *MoveHostNotFound {

	return &MoveHostNotFound{}
}

// WithPayload adds the payload to the move host not found response
func (o *MoveHostNotFound) WithPayload(payload *models.Error) *MoveHostNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move host not found response
func (o *MoveHostNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveHostNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveHostConflictCode is the HTTP code returned for type MoveHostConflict
const MoveHostConflictCode int = 409

/*MoveHostConflict Error.

swagger:response moveHostConflict
*/
type MoveHostConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMoveHostConflict creates MoveHostConflict with default headers values
func NewMoveHostConflict() *MoveHostConflict {

	return &MoveHostConflict{}
}

// WithPayload adds the payload to the move host conflict response
func (o *MoveHostConflict) WithPayload(payload *models.Error) *MoveHostConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move host conflict response
func (o *MoveHostConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveHostConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MoveHostInternalServerErrorCode is the HTTP code returned for type MoveHostInternalServerError
const MoveHostInternalServerErrorCode int = 500

/*MoveHostInternalServerError Error.

swagger:response moveHostInternalServerError
*/
type MoveHostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewMoveHostInternalServerError creates MoveHostInternalServerError with default headers values
func NewMoveHostInternalServerError() *MoveHostInternalServerError {

	return &MoveHostInternalServerError{}
}

// WithPayload adds the payload to the move host internal server error response
func (o *MoveHostInternalServerError) WithPayload(payload *models.Error) *MoveHostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the move host internal server error response
func (o *MoveHostInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MoveHostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
